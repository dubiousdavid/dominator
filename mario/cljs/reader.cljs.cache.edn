;; Analyzed by ClojureScript 0.0-3178
{:use-macros nil, :excludes #{}, :name cljs.reader, :imports {StringBuffer goog.string.StringBuffer}, :requires {gstring goog.string, goog.string goog.string, StringBuffer goog.string.StringBuffer}, :uses nil, :defs {read-uuid {:protocol-inline nil, :meta {:line 561, :column 17, :end-line 561, :end-column 26, :private true, :arglists (quote ([uuid])), :file nil}, :private true, :name cljs.reader/read-uuid, :variadic false, :file "mario/cljs/reader.cljs", :end-column 26, :method-params ([uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 561, :end-line 561, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uuid])), :test true}, ->StringPushbackReader {:protocol-inline nil, :meta {:line 18, :column 10, :end-line 18, :end-column 30, :protocols #{cljs.reader/PushbackReader}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([s buffer idx])), :file nil}, :protocols #{cljs.reader/PushbackReader}, :name cljs.reader/->StringPushbackReader, :variadic false, :file "mario/cljs/reader.cljs", :end-column 30, :method-params ([s buffer idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([s buffer idx])), :skip-protocol-flag nil, :test true}, match-number {:protocol-inline nil, :meta {:line 145, :column 8, :end-line 145, :end-column 20, :private true, :arglists (quote ([s])), :file nil}, :private true, :name cljs.reader/match-number, :variadic false, :file "mario/cljs/reader.cljs", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, validate-unicode-escape {:protocol-inline nil, :meta {:line 184, :column 7, :end-line 184, :end-column 30, :arglists (quote ([unicode-pattern reader escape-char unicode-str])), :file nil}, :name cljs.reader/validate-unicode-escape, :variadic false, :file "mario/cljs/reader.cljs", :end-column 30, :method-params ([unicode-pattern reader escape-char unicode-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 4, :fn-var true, :arglists (quote ([unicode-pattern reader escape-char unicode-str])), :test true}, not-implemented {:protocol-inline nil, :meta {:line 244, :column 7, :end-line 244, :end-column 22, :arglists (quote ([rdr ch])), :file nil}, :name cljs.reader/not-implemented, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([rdr ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr ch])), :test true}, whitespace? {:protocol-inline nil, :meta {:line 37, :column 17, :end-line 37, :end-column 28, :tag boolean, :private true, :arglists (quote ([ch])), :doc "Checks whether a given character is whitespace", :file nil}, :private true, :name cljs.reader/whitespace?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 28, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :ret-tag boolean, :end-line 37, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([ch])), :doc "Checks whether a given character is whitespace", :test true}, skip-line {:protocol-inline nil, :meta {:line 89, :column 7, :end-line 89, :end-column 16, :arglists (quote ([reader _])), :doc "Advances the reader to the end of a line. Returns the reader", :file nil}, :name cljs.reader/skip-line, :variadic false, :file "mario/cljs/reader.cljs", :end-column 16, :method-params ([reader _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader _])), :doc "Advances the reader to the end of a line. Returns the reader", :test true}, int-pattern {:name cljs.reader/int-pattern, :line 98, :column 1, :end-line 98, :end-column 17, :test true, :meta {:line 98, :column 6, :end-line 98, :end-column 17, :file nil}, :file "mario/cljs/reader.cljs"}, read-comment {:name cljs.reader/read-comment, :line 268, :column 1, :end-line 268, :end-column 18, :test true, :meta {:line 268, :column 6, :end-line 268, :end-column 18, :file nil}, :file "mario/cljs/reader.cljs"}, match-ratio {:protocol-inline nil, :meta {:line 134, :column 8, :end-line 134, :end-column 19, :private true, :arglists (quote ([s])), :file nil}, :private true, :name cljs.reader/match-ratio, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, PushbackReader {:meta {:line 13, :column 14, :end-line 13, :end-column 28, :doc nil, :protocol-symbol true, :protocol-info {:methods {read-char [[reader]], unread [[reader ch]]}}, :file nil}, :protocol-symbol true, :name cljs.reader/PushbackReader, :file "mario/cljs/reader.cljs", :end-column 28, :column 1, :line 13, :protocol-info {:methods {read-char [[reader]], unread [[reader ch]]}}, :info nil, :end-line 13, :impls #{cljs.reader/StringPushbackReader}, :doc nil, :test true}, wrapping-reader {:protocol-inline nil, :meta {:line 361, :column 7, :end-line 361, :end-column 22, :arglists (quote ([sym])), :file nil}, :name cljs.reader/wrapping-reader, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([sym]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sym])), :test true}, match-int {:protocol-inline nil, :meta {:line 112, :column 8, :end-line 112, :end-column 17, :private true, :arglists (quote ([s])), :file nil}, :private true, :name cljs.reader/match-int, :variadic false, :file "mario/cljs/reader.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, read-meta {:protocol-inline nil, :meta {:line 371, :column 7, :end-line 371, :end-column 16, :arglists (quote ([rdr _])), :file nil}, :name cljs.reader/read-meta, :variadic false, :file "mario/cljs/reader.cljs", :end-column 16, :method-params ([rdr _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr _])), :test true}, numeric? {:protocol-inline nil, :meta {:line 42, :column 17, :end-line 42, :end-column 25, :tag boolean, :private true, :arglists (quote ([ch])), :doc "Checks whether a given character is numeric", :file nil}, :private true, :name cljs.reader/numeric?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 25, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :ret-tag boolean, :end-line 42, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([ch])), :doc "Checks whether a given character is numeric", :test true}, read-unmatched-delimiter {:protocol-inline nil, :meta {:line 260, :column 7, :end-line 260, :end-column 31, :arglists (quote ([rdr ch])), :file nil}, :name cljs.reader/read-unmatched-delimiter, :variadic false, :file "mario/cljs/reader.cljs", :end-column 31, :method-params ([rdr ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr ch])), :test true}, StringPushbackReader {:num-fields 3, :protocols #{cljs.reader/PushbackReader}, :name cljs.reader/StringPushbackReader, :file "mario/cljs/reader.cljs", :end-column 30, :type true, :column 10, :line 18, :record false, :end-line 18, :skip-protocol-flag nil}, leap-year? {:protocol-inline nil, :meta {:line 468, :column 17, :end-line 468, :end-column 27, :private true, :arglists (quote ([year])), :file nil}, :private true, :name cljs.reader/leap-year?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 27, :method-params ([year]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 468, :end-line 468, :max-fixed-arity 1, :fn-var true, :arglists (quote ([year])), :test true}, reader-error {:protocol-inline nil, :meta {:line 69, :column 7, :end-line 69, :end-column 19, :arglists (quote ([rdr & msg])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(rdr msg)], :arglists [[rdr & msg]], :arglists-meta (nil)}, :file nil}, :name cljs.reader/reader-error, :variadic true, :file "mario/cljs/reader.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(rdr msg)], :arglists [[rdr & msg]], :arglists-meta (nil)}, :method-params [(rdr msg)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists [[rdr & msg]], :test true}, unicode-4-pattern {:name cljs.reader/unicode-4-pattern, :line 182, :column 1, :end-line 182, :end-column 23, :test true, :meta {:line 182, :column 6, :end-line 182, :end-column 23, :file nil}, :file "mario/cljs/reader.cljs"}, read-raw-string* {:protocol-inline nil, :meta {:line 304, :column 7, :end-line 304, :end-column 23, :arglists (quote ([reader _])), :file nil}, :name cljs.reader/read-raw-string*, :variadic false, :file "mario/cljs/reader.cljs", :end-column 23, :method-params ([reader _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader _])), :test true}, unread {:protocol-inline nil, :meta {:line 16, :column 4, :end-line 16, :end-column 10, :protocol cljs.reader/PushbackReader, :doc "Push back a single character on to the stream", :arglists (quote ([reader ch])), :file nil}, :protocol cljs.reader/PushbackReader, :name cljs.reader/unread, :variadic false, :file "mario/cljs/reader.cljs", :end-column 10, :method-params ([reader ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader ch])), :doc "Push back a single character on to the stream", :test true}, *default-data-reader-fn* {:name cljs.reader/*default-data-reader-fn*, :line 573, :column 1, :end-line 573, :end-column 40, :dynamic true, :test true, :meta {:line 573, :column 16, :end-line 573, :end-column 40, :dynamic true, :file nil}, :file "mario/cljs/reader.cljs"}, read {:protocol-inline nil, :meta {:line 424, :column 7, :end-line 424, :end-column 11, :arglists (quote ([reader eof-is-error sentinel is-recursive])), :doc "Reads the first object from a PushbackReader. Returns the object read.\n   If EOF, throws if eof-is-error is true. Otherwise returns sentinel.", :file nil}, :name cljs.reader/read, :variadic false, :file "mario/cljs/reader.cljs", :end-column 11, :method-params ([reader eof-is-error sentinel is-recursive]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reader eof-is-error sentinel is-recursive])), :doc "Reads the first object from a PushbackReader. Returns the object read.\n   If EOF, throws if eof-is-error is true. Otherwise returns sentinel.", :test true}, read-set {:protocol-inline nil, :meta {:line 381, :column 7, :end-line 381, :end-column 15, :arglists (quote ([rdr _])), :file nil}, :name cljs.reader/read-set, :variadic false, :file "mario/cljs/reader.cljs", :end-column 15, :method-params ([rdr _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr _])), :test true}, read-symbol {:protocol-inline nil, :meta {:line 327, :column 7, :end-line 327, :end-column 18, :arglists (quote ([reader initch])), :file nil}, :name cljs.reader/read-symbol, :variadic false, :file "mario/cljs/reader.cljs", :end-column 18, :method-params ([reader initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader initch])), :test true}, *tag-table* {:name cljs.reader/*tag-table*, :line 567, :column 1, :end-line 567, :end-column 27, :dynamic true, :test true, :meta {:line 567, :column 16, :end-line 567, :end-column 27, :dynamic true, :file nil}, :file "mario/cljs/reader.cljs"}, desugar-meta {:protocol-inline nil, :meta {:line 353, :column 7, :end-line 353, :end-column 19, :arglists (quote ([f])), :file nil}, :name cljs.reader/desugar-meta, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, unicode-2-pattern {:name cljs.reader/unicode-2-pattern, :line 181, :column 1, :end-line 181, :end-column 23, :test true, :meta {:line 181, :column 6, :end-line 181, :end-column 23, :file nil}, :file "mario/cljs/reader.cljs"}, days-in-month {:name cljs.reader/days-in-month, :line 474, :column 1, :end-line 474, :end-column 29, :private true, :test true, :meta {:line 474, :column 16, :end-line 474, :end-column 29, :private true, :file nil}, :file "mario/cljs/reader.cljs"}, parse-and-validate-timestamp {:protocol-inline nil, :meta {:line 492, :column 7, :end-line 492, :end-column 35, :arglists (quote ([s])), :file nil}, :name cljs.reader/parse-and-validate-timestamp, :variadic false, :file "mario/cljs/reader.cljs", :end-column 35, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 492, :end-line 492, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, read-map {:protocol-inline nil, :meta {:line 274, :column 7, :end-line 274, :end-column 15, :arglists (quote ([rdr _])), :file nil}, :name cljs.reader/read-map, :variadic false, :file "mario/cljs/reader.cljs", :end-column 15, :method-params ([rdr _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr _])), :test true}, special-symbols {:protocol-inline nil, :meta {:line 319, :column 7, :end-line 319, :end-column 22, :arglists (quote ([t not-found])), :file nil}, :name cljs.reader/special-symbols, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([t not-found]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 319, :end-line 319, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t not-found])), :test true}, push-back-reader {:protocol-inline nil, :meta {:line 29, :column 7, :end-line 29, :end-column 23, :arglists (quote ([s])), :file nil}, :name cljs.reader/push-back-reader, :variadic false, :file "mario/cljs/reader.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, register-tag-parser! {:protocol-inline nil, :meta {:line 588, :column 7, :end-line 588, :end-column 27, :arglists (quote ([tag f])), :file nil}, :name cljs.reader/register-tag-parser!, :variadic false, :file "mario/cljs/reader.cljs", :end-column 27, :method-params ([tag f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 588, :end-line 588, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag f])), :test true}, macros {:protocol-inline nil, :meta {:line 394, :column 7, :end-line 394, :end-column 13, :arglists (quote ([c])), :file nil}, :name cljs.reader/macros, :variadic false, :file "mario/cljs/reader.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, number-literal? {:protocol-inline nil, :meta {:line 52, :column 17, :end-line 52, :end-column 32, :tag boolean, :private true, :arglists (quote ([reader initch])), :doc "Checks whether the reader is at the start of a number literal", :file nil}, :private true, :name cljs.reader/number-literal?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 32, :method-params ([reader initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :ret-tag boolean, :end-line 52, :max-fixed-arity 2, :tag boolean, :fn-var true, :arglists (quote ([reader initch])), :doc "Checks whether the reader is at the start of a number literal", :test true}, escape-char-map {:protocol-inline nil, :meta {:line 152, :column 7, :end-line 152, :end-column 22, :arglists (quote ([c])), :file nil}, :name cljs.reader/escape-char-map, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :test true}, check {:protocol-inline nil, :meta {:line 487, :column 17, :end-line 487, :end-column 22, :private true, :arglists (quote ([low n high msg])), :file nil}, :private true, :name cljs.reader/check, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([low n high msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 487, :end-line 487, :max-fixed-arity 4, :fn-var true, :arglists (quote ([low n high msg])), :test true}, read-list {:protocol-inline nil, :meta {:line 264, :column 7, :end-line 264, :end-column 16, :arglists (quote ([rdr _])), :file nil}, :name cljs.reader/read-list, :variadic false, :file "mario/cljs/reader.cljs", :end-column 16, :method-params ([rdr _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr _])), :test true}, read-past {:protocol-inline nil, :meta {:line 216, :column 7, :end-line 216, :end-column 16, :arglists (quote ([pred rdr])), :doc "Read until first character that doesn't match pred, returning\n   char.", :file nil}, :name cljs.reader/read-past, :variadic false, :file "mario/cljs/reader.cljs", :end-column 16, :method-params ([pred rdr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred rdr])), :doc "Read until first character that doesn't match pred, returning\n   char.", :test true}, timestamp-regex {:name cljs.reader/timestamp-regex, :line 480, :column 1, :end-line 480, :end-column 31, :private true, :test true, :meta {:line 480, :column 16, :end-line 480, :end-column 31, :private true, :file nil}, :file "mario/cljs/reader.cljs"}, dispatch-macros {:protocol-inline nil, :meta {:line 415, :column 7, :end-line 415, :end-column 22, :arglists (quote ([s])), :file nil}, :name cljs.reader/dispatch-macros, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 415, :end-line 415, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, float-pattern {:name cljs.reader/float-pattern, :line 100, :column 1, :end-line 100, :end-column 19, :test true, :meta {:line 100, :column 6, :end-line 100, :end-column 19, :file nil}, :file "mario/cljs/reader.cljs"}, register-default-tag-parser! {:protocol-inline nil, :meta {:line 602, :column 7, :end-line 602, :end-column 35, :arglists (quote ([f])), :file nil}, :name cljs.reader/register-default-tag-parser!, :variadic false, :file "mario/cljs/reader.cljs", :end-column 35, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 602, :end-line 602, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, re-matches* {:protocol-inline nil, :meta {:line 103, :column 8, :end-line 103, :end-column 19, :private true, :arglists (quote ([re s])), :file nil}, :private true, :name cljs.reader/re-matches*, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([re s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([re s])), :test true}, divisible? {:protocol-inline nil, :meta {:line 460, :column 17, :end-line 460, :end-column 27, :private true, :arglists (quote ([num div])), :file nil}, :private true, :name cljs.reader/divisible?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 27, :method-params ([num div]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 460, :end-line 460, :max-fixed-arity 2, :fn-var true, :arglists (quote ([num div])), :test true}, read-char {:protocol-inline nil, :meta {:line 14, :column 4, :end-line 14, :end-column 13, :protocol cljs.reader/PushbackReader, :doc "Returns the next char from the Reader,\nnil if the end of stream has been reached", :arglists (quote ([reader])), :file nil}, :protocol cljs.reader/PushbackReader, :name cljs.reader/read-char, :variadic false, :file "mario/cljs/reader.cljs", :end-column 13, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :doc "Returns the next char from the Reader,\nnil if the end of stream has been reached", :test true}, read-token {:protocol-inline nil, :meta {:line 79, :column 7, :end-line 79, :end-column 17, :arglists (quote ([rdr initch])), :file nil}, :name cljs.reader/read-token, :variadic false, :file "mario/cljs/reader.cljs", :end-column 17, :method-params ([rdr initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr initch])), :test true}, zero-fill-right-and-truncate {:protocol-inline nil, :meta {:line 452, :column 17, :end-line 452, :end-column 45, :private true, :arglists (quote ([s width])), :file nil}, :private true, :name cljs.reader/zero-fill-right-and-truncate, :variadic false, :file "mario/cljs/reader.cljs", :end-column 45, :method-params ([s width]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s width])), :test true}, read-date {:protocol-inline nil, :meta {:line 526, :column 17, :end-line 526, :end-column 26, :private true, :arglists (quote ([s])), :file nil}, :private true, :name cljs.reader/read-date, :variadic false, :file "mario/cljs/reader.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 526, :end-line 526, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, symbol-pattern {:name cljs.reader/symbol-pattern, :line 101, :column 1, :end-line 101, :end-column 20, :test true, :meta {:line 101, :column 6, :end-line 101, :end-column 20, :file nil}, :file "mario/cljs/reader.cljs"}, deregister-default-tag-parser! {:protocol-inline nil, :meta {:line 608, :column 7, :end-line 608, :end-column 37, :arglists (quote ([])), :file nil}, :name cljs.reader/deregister-default-tag-parser!, :variadic false, :file "mario/cljs/reader.cljs", :end-column 37, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 608, :end-line 608, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, read-regex {:protocol-inline nil, :meta {:line 385, :column 7, :end-line 385, :end-column 17, :arglists (quote ([rdr ch])), :file nil}, :name cljs.reader/read-regex, :variadic false, :file "mario/cljs/reader.cljs", :end-column 17, :method-params ([rdr ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr ch])), :test true}, indivisible? {:protocol-inline nil, :meta {:line 464, :column 17, :end-line 464, :end-column 29, :private true, :arglists (quote ([num div])), :file nil}, :private true, :name cljs.reader/indivisible?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 29, :method-params ([num div]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 464, :end-line 464, :max-fixed-arity 2, :fn-var true, :arglists (quote ([num div])), :test true}, throwing-reader {:protocol-inline nil, :meta {:line 366, :column 7, :end-line 366, :end-column 22, :arglists (quote ([msg])), :file nil}, :name cljs.reader/throwing-reader, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 366, :end-line 366, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, read-dispatch {:protocol-inline nil, :meta {:line 250, :column 7, :end-line 250, :end-column 20, :arglists (quote ([rdr _])), :file nil}, :name cljs.reader/read-dispatch, :variadic false, :file "mario/cljs/reader.cljs", :end-column 20, :method-params ([rdr _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr _])), :test true}, make-unicode-char {:protocol-inline nil, :meta {:line 189, :column 7, :end-line 189, :end-column 24, :arglists (quote ([code-str])), :file nil}, :name cljs.reader/make-unicode-char, :variadic false, :file "mario/cljs/reader.cljs", :end-column 24, :method-params ([code-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([code-str])), :test true}, read-queue {:protocol-inline nil, :meta {:line 533, :column 17, :end-line 533, :end-column 27, :private true, :arglists (quote ([elems])), :file nil}, :private true, :name cljs.reader/read-queue, :variadic false, :file "mario/cljs/reader.cljs", :end-column 27, :method-params ([elems]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 533, :end-line 533, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elems])), :test true}, match-float {:protocol-inline nil, :meta {:line 141, :column 8, :end-line 141, :end-column 19, :private true, :arglists (quote ([s])), :file nil}, :private true, :name cljs.reader/match-float, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, maybe-read-tagged-type {:protocol-inline nil, :meta {:line 576, :column 7, :end-line 576, :end-column 29, :arglists (quote ([rdr initch])), :file nil}, :name cljs.reader/maybe-read-tagged-type, :variadic false, :file "mario/cljs/reader.cljs", :end-column 29, :method-params ([rdr initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 576, :end-line 576, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr initch])), :test true}, read-string {:protocol-inline nil, :meta {:line 443, :column 7, :end-line 443, :end-column 18, :arglists (quote ([s])), :doc "Reads one object from the string s", :file nil}, :name cljs.reader/read-string, :variadic false, :file "mario/cljs/reader.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Reads one object from the string s", :test true}, read-delimited-list {:protocol-inline nil, :meta {:line 225, :column 7, :end-line 225, :end-column 26, :arglists (quote ([delim rdr recursive?])), :file nil}, :name cljs.reader/read-delimited-list, :variadic false, :file "mario/cljs/reader.cljs", :end-column 26, :method-params ([delim rdr recursive?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 3, :fn-var true, :arglists (quote ([delim rdr recursive?])), :test true}, comment-prefix? {:protocol-inline nil, :meta {:line 47, :column 17, :end-line 47, :end-column 32, :tag boolean, :private true, :arglists (quote ([ch])), :doc "Checks whether the character begins a comment.", :file nil}, :private true, :name cljs.reader/comment-prefix?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 32, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :ret-tag boolean, :end-line 47, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([ch])), :doc "Checks whether the character begins a comment.", :test true}, read-4-chars {:protocol-inline nil, :meta {:line 173, :column 7, :end-line 173, :end-column 19, :arglists (quote ([reader])), :file nil}, :name cljs.reader/read-4-chars, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :test true}, escape-char {:protocol-inline nil, :meta {:line 193, :column 7, :end-line 193, :end-column 18, :arglists (quote ([buffer reader])), :file nil}, :name cljs.reader/escape-char, :variadic false, :file "mario/cljs/reader.cljs", :end-column 18, :method-params ([buffer reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([buffer reader])), :test true}, read-string* {:protocol-inline nil, :meta {:line 293, :column 7, :end-line 293, :end-column 19, :arglists (quote ([reader _])), :file nil}, :name cljs.reader/read-string*, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([reader _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader _])), :test true}, parse-int {:protocol-inline nil, :meta {:line 482, :column 17, :end-line 482, :end-column 26, :private true, :arglists (quote ([s])), :file nil}, :private true, :name cljs.reader/parse-int, :variadic false, :file "mario/cljs/reader.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 482, :end-line 482, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, macro-terminating? {:protocol-inline nil, :meta {:line 73, :column 16, :end-line 73, :end-column 34, :tag boolean, :arglists (quote ([ch])), :file nil}, :name cljs.reader/macro-terminating?, :variadic false, :file "mario/cljs/reader.cljs", :end-column 34, :method-params ([ch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :ret-tag boolean, :end-line 73, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([ch])), :test true}, read-keyword {:protocol-inline nil, :meta {:line 337, :column 7, :end-line 337, :end-column 19, :arglists (quote ([reader initch])), :file nil}, :name cljs.reader/read-keyword, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([reader initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader initch])), :test true}, read-2-chars {:protocol-inline nil, :meta {:line 167, :column 7, :end-line 167, :end-column 19, :arglists (quote ([reader])), :file nil}, :name cljs.reader/read-2-chars, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([reader]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reader])), :test true}, read-discard {:protocol-inline nil, :meta {:line 389, :column 7, :end-line 389, :end-column 19, :arglists (quote ([rdr _])), :file nil}, :name cljs.reader/read-discard, :variadic false, :file "mario/cljs/reader.cljs", :end-column 19, :method-params ([rdr _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 389, :end-line 389, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr _])), :test true}, read-vector {:protocol-inline nil, :meta {:line 270, :column 7, :end-line 270, :end-column 18, :arglists (quote ([rdr _])), :file nil}, :name cljs.reader/read-vector, :variadic false, :file "mario/cljs/reader.cljs", :end-column 18, :method-params ([rdr _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rdr _])), :test true}, read-js {:protocol-inline nil, :meta {:line 540, :column 17, :end-line 540, :end-column 24, :private true, :arglists (quote ([form])), :file nil}, :private true, :name cljs.reader/read-js, :variadic false, :file "mario/cljs/reader.cljs", :end-column 24, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 540, :end-line 540, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form])), :test true}, read-number {:protocol-inline nil, :meta {:line 281, :column 7, :end-line 281, :end-column 18, :arglists (quote ([reader initch])), :file nil}, :name cljs.reader/read-number, :variadic false, :file "mario/cljs/reader.cljs", :end-column 18, :method-params ([reader initch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reader initch])), :test true}, deregister-tag-parser! {:protocol-inline nil, :meta {:line 595, :column 7, :end-line 595, :end-column 29, :arglists (quote ([tag])), :file nil}, :name cljs.reader/deregister-tag-parser!, :variadic false, :file "mario/cljs/reader.cljs", :end-column 29, :method-params ([tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 595, :end-line 595, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tag])), :test true}, parse-timestamp {:protocol-inline nil, :meta {:line 517, :column 7, :end-line 517, :end-column 22, :arglists (quote ([ts])), :file nil}, :name cljs.reader/parse-timestamp, :variadic false, :file "mario/cljs/reader.cljs", :end-column 22, :method-params ([ts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 517, :end-line 517, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ts])), :test true}, ratio-pattern {:name cljs.reader/ratio-pattern, :line 99, :column 1, :end-line 99, :end-column 19, :test true, :meta {:line 99, :column 6, :end-line 99, :end-column 19, :file nil}, :file "mario/cljs/reader.cljs"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :default :tag}, :order [:else :default :tag]}, :doc nil}